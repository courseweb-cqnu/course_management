<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.second.dao.CollegeDao">
    <resultMap id="BaseResultMap" type="com.example.second.entity.College">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="pattern" property="pattern" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, pattern, name
    </sql>

    <select id="findAllColleges" resultType="com.example.second.entity.College">
        select * from college
    </select>

    <select id="findCollegeByName" parameterType="java.lang.String" resultMap="BaseResultMap">
        select * from college where title = #{title,jdbcType=VARCHAR}
    </select>

    <delete id="deleteCollegesByIds">
        delete from college where uid in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>

    <select id="getCountColleges" resultType="java.lang.Integer">
        select count(id) as count from college
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from college
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteCollegeById" parameterType="java.lang.Long">
        delete from college
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <insert id="insert" parameterType="com.example.second.entity.College">
        insert into college (id, pattern, name)
        values (#{id,jdbcType=BIGINT}, #{pattern,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}
    </insert>
    <insert id="addCollege" parameterType="com.example.second.entity.College">
        insert into college
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="title != null">
                pattern,
            </if>
            <if test="date != null">
                name,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="pattern != null">
                #{pattern,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateCollege" parameterType="com.example.second.entity.College">
        update college
        <set>
            <if test="pattern != null">
                pattern = #{pattern,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.second.entity.College">
        update college
        set pattern = #{pattern,jdbcType=VARCHAR},
        name = #{name,jdbcType=VARCHAR},
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>